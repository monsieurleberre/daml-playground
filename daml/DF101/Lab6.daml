module DF101.Lab6 where

import Daml.Script

-- Problem 1
data Account = Account { ownerId : Text, balance : Decimal }

class SafeAccount where
    safeQuery : Account -> Text -> (Optional Decimal)

instance SafeAccount where
    safeQuery account id =
        if account.ownerId == id  then Some account.balance 
        else None

testSafeAccount : Script ()
testSafeAccount = script do 

    let myAccount = Account with 
            ownerId = "123"
            balance = 100.00

        myBalance1: Optional Decimal = safeQuery myAccount "123"

    debug $ myBalance1

    let myBalance2: Optional Decimal = safeQuery myAccount "234"

    debug $ myBalance2

    return ()

-- Problem 2    
data AirtravelPoint = AirtravelPoint { count : Int }
data DiningPoint = DiningPoint { count : Int }

class Redeemable points where
    redeem : points -> Decimal

instance Redeemable AirtravelPoint where
    redeem points = intToDecimal points.count * 10.0

instance Redeemable DiningPoint where
    redeem points = intToDecimal points.count * 5.0

testRedeemable : Script ()
testRedeemable = script do 
    let myTravelPoints = AirtravelPoint with 
            count = 500

        myDiningPoints = DiningPoint with 
            count = 5000

        myTotalRedeemedPoints: Decimal = redeem myTravelPoints + redeem myDiningPoints

    debug  myTotalRedeemedPoints 
   
    return()