module DF101.Lab2 where

import Daml.Script
import DA.List as List
import DA.Map as Map
import DA.Text (words)

-- Problem 1
song = [
    ("do", "a deer, a female deer"),
    ("re", "a drop of golden sun"), 
    ("mi", "a name, I call myself"), 
    ("fa", "a long long way to run")
 ]

-- not allowed yet ðŸ¤£
-- notesInOrder = map fst song
-- versesInOrder = map snd song

first = head song
second = head (tail song)
third = head (tail (tail song))
fourth = head (tail (tail (tail song)))

notesInOrder = [fst first, fst second, fst third, fst fourth]
versesInOrder = [snd first, snd second, snd third, snd fourth]

notesReversed = reverse notesInOrder
versesReversed = reverse versesInOrder

notesMap = Map.fromList (song)

tests1 : Script ()
tests1 = script do
    debug notesInOrder
    debug versesInOrder
    debug notesReversed
    debug versesReversed
    debug $ Map.lookup "do" notesMap
    debug $ Map.lookup "re" notesMap
    debug $ Map.lookup "mi" notesMap
    debug $ Map.lookup "fa" notesMap


-- Problem 2
termFrequency : Text -> Text -> Int
termFrequency phrase term = do
    let wordList = words phrase
    let listOfOccurrences = List.filter (== term) wordList
    let length = List.length listOfOccurrences
    length

test2 : Script ()
test2 = script do
    debug $ termFrequency "a long long way to run" "long"
